image: python:3.8

stages:
  - test
  - build
  - deploy

test-lint:
  stage: test
  tags: [docker]
  before_script:
    - pip install mypy
    - pip install -r requirements.txt
  script:
    - mypy bretina

build-wheel:
  stage: build
  tags:
    - docker
  before_script:
    - echo
  script:
    - make
  artifacts:
    paths:
      - "dist/bretina-*.*"
    expire_in: 1 week
  only:
    - tags

deploy-wheel:
  stage: deploy
  tags:
    - docker
  image: chartedcode/alpine-sftp-client
  before_script:
    - echo "$PYPI_KEY" | tr -d '\r' > ./ssh_key
    - chmod 600 ./ssh_key
  script:
     - |
      sftp -i ./ssh_key -oStrictHostKeyChecking=no $PYPI_USER@$PYPI_HOST:/bretina/ << EOF
        put dist/*
        quit
      EOF
  needs: [build-wheel]
  dependencies:
    - build-wheel
  only:
    - tags

deploy-pypi:
  stage: deploy
  needs: [build-wheel]
  tags:
    - docker
  image: python:3.9
  before_script:
    - pip install twine
  script:
    - twine upload --repository-url $PYPI_INDEX dist/*
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]$/


build-docs:
  stage: build
  tags:
    - docker
  script:
    - apt update
    - apt install -y libgl1-mesa-glx
    - pip install -r requirements.txt
    - pip install -U sphinx
    - pip install sphinx-theme
    - cd docs
    - make singlehtml
  artifacts:
    paths:
      - "docs/_build/singlehtml/*"
    expire_in: 1 week
  only:
    - devel

deploy-docs:
  stage: deploy
  tags:
    - docker
  image: chartedcode/alpine-sftp-client
  before_script:
    - echo "$DOCS_KEY" | tr -d '\r' > ./ssh_key
    - chmod 600 ./ssh_key
  script:
    - |
      sftp -i ./ssh_key -oStrictHostKeyChecking=no $DOCS_USER@$DOCS_HOST:/bretina/ << EOF
        put -R docs/_build/singlehtml/*
        quit
      EOF
  dependencies:
    - build-docs
  only:
    - devel
